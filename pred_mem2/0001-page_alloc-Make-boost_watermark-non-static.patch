From 3801492ac16eacee1f2ea7453cc75dd644dee28c Mon Sep 17 00:00:00 2001
From: Bharath Vedartham <linux.bhar@gmail.com>
Date: Mon, 12 Aug 2019 10:18:49 -0600
Subject: [PATCH 1/3] page_alloc: Make boost_watermark non-static

This is a preparatory patch for the upcoming patches adding
memory exhaustion prediction.

boost_watermark is used in vmscan.c. Make it non-static to enable that
use.

Signed-off-by: Bharath Vedartham <linux.bhar@gmail.com>
---
 include/linux/mmzone.h | 2 ++
 mm/page_alloc.c        | 2 +-
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/include/linux/mmzone.h b/include/linux/mmzone.h
index d77d717c620c..3c8937ab7b28 100644
--- a/include/linux/mmzone.h
+++ b/include/linux/mmzone.h
@@ -322,6 +322,8 @@ enum zone_watermarks {
 	NR_WMARK
 };
 
+extern void boost_watermark(struct zone *zone);
+
 #define min_wmark_pages(z) (z->_watermark[WMARK_MIN] + z->watermark_boost)
 #define low_wmark_pages(z) (z->_watermark[WMARK_LOW] + z->watermark_boost)
 #define high_wmark_pages(z) (z->_watermark[WMARK_HIGH] + z->watermark_boost)
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 272c6de1bf4e..033aa5e1591c 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -2351,7 +2351,7 @@ static bool can_steal_fallback(unsigned int order, int start_mt)
 	return false;
 }
 
-static inline void boost_watermark(struct zone *zone)
+void boost_watermark(struct zone *zone)
 {
 	unsigned long max_boost;
 
-- 
2.17.1

